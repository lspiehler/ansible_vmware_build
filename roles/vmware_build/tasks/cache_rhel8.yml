---
  - name: Create a virtual machine in vCenter
    vmware_guest:
      validate_certs: "{{ hostvars[item].validate_certs }}"
      datacenter: "{{ hostvars[item].vcenter_datacenter }}"
      folder: "{{ hostvars[item].vcenter_folder }}"
      name: "{{ item }}"
      state: poweredon
      guest_id: "{{ hostvars[item].vcenter_guestid }}"
      cluster: "{{ hostvars[item].vcenter_cluster }}"
      disk: "{{ hostvars[item].disks }}"
      cdrom:
      - controller_number: 0
        unit_number: 0
        state: present
        type: iso
        iso_path: "{{ hostvars[item].iso_path }}"
      hardware:
        memory_mb: "{{ hostvars[item].memory_mb }}"
        num_cpus: "{{ hostvars[item].num_cpus }}"
        #scsi: "{{ hostvars[item].disks[0].controller_type }}"
      networks:
      - name: "{{ hostvars[item].vcenter_network }}"
        device_type: "{{ hostvars[item].device_type }}"
      wait_for_ip_address: no
    delegate_to: localhost
    register: vm
  - name: Send Keystrokes
    vmware_guest_sendkey:
      validate_certs: "{{ hostvars[item].validate_certs }}"
      name: "{{ vm.instance.hw_name }}"
      keys_send:
        - ESC
    delegate_to: localhost
    when: vm.changed
  - name: Send Keystrokes
    vmware_guest_sendkey:
      validate_certs: "{{ hostvars[item].validate_certs }}"
      name: "{{ vm.instance.hw_name }}"
      string_send: "vmlinuz initrd=initrd.img ip={{ hostvars[item].ansible_host }}::{{ hostvars[item].gateway }}:{{ hostvars[item].netmask }}:{{ item }}:{{ hostvars[item].iface }}:none nameserver={{ hostvars[item].dns1 }} nameserver={{ hostvars[item].dns2 }} inst.ks={{ hostvars[item].ksurl }} {{ hostvars[item].extra_kernel_args }}"
    delegate_to: localhost
    when: vm.changed
  - name: Send Keystrokes
    vmware_guest_sendkey:
      validate_certs: "{{ hostvars[item].validate_certs }}"
      name: "{{ vm.instance.hw_name }}"
      keys_send:
        - ENTER
    delegate_to: localhost
    when: vm.changed
